// exploitmenu.src 
// a multi-page menu desisgned to handle
// 1.) net session exploits
// 2.) local elevation 
// 3.) router penetration selected_menu = 0


// *******
//* Attack = function 
//* shells: list [ [shell_type, shell_object: Shell] ]
//* computers: list [ [ computer: Computer ] ]
//* files: list [ [ file: File ] ]
//* others: list [ [ file: String | Number ] ]
//* returns [exploit_type: Number, exploit_object: Map ]
exploit_menu = function(shells, comps, files, others)
	selected_option = 0
	selected_exploit = null
	selecting = true
	options = []
	if shells.len == 0 and comps.len == 0 and files.len == 0 and others.len == 0 then return print("Error, no exploits passed to the menu"); 
	print(color.blue+color.fill);print(init+color.green+" entering exploit menu . . .");print(color.blue+color.fill);
	while selecting == true	
		
		if selecting == false then break
		menu = [color.white+"~^~^~^~ Main ~^~^~^~"+color.cap, color.purple+"~^~^~^~ Shells ~^~^~^~"+color.cap, color.blue+"~^~^~^~ Computers ~^~^~^~"+color.cap, color.green+"~^~^~^~ Files ~^~^~^~"+color.cap, color.grey+"~^~^~^~ Other ~^~^~^~"+color.cap]
		if selected_menu == 0 then options = ["Shells: "+shells.len, "Computers: "+comps.len, "Files: "+files.len, "Other: "+others.len]
		// ASSIGNMENT
		if selected_menu == 1 then options = shells 
		if selected_menu == 2 then options = comps
		if selected_menu == 3 then options = files
		if selected_menu == 3 then choices = choices +"\n"+color.grey+"PATH NAME OWNER GROUP SCOPE PERMISSIONS"
		if selected_menu == 4 then options = others
		chosen_exploit = null
		in_main = null
		count = 1
		choices = menu[selected_menu]
		// FORMAT CHOICES
		for o in options
			info = ""
			if selected_menu == 0 then
				info = info+o
				in_main = true
			else if selected_menu == 1 then		// shell exploit
				info = "[ " + Utils.user(o.shell) +" ] "+ (o isa ShellObject)
				in_main = false
			else if selected_menu == 2 then		// computer exploit
				info = "[ " + Utils.user(o.PC) + " ] \n" +color.white+o.ip+color.cap+":"+color.grey+o.lan 
				//info = "[_" + Utils.user_check(o) + "_]"
				in_main = false
			else if selected_menu == 3 then 		// file exploit
				lvl=""
				if o.F.has_permission("r") then lvl = lvl+"r"
				if o.F.has_permission("w") then lvl = lvl+"w"
				if o.F.has_permission("x") then lvl = lvl+"x"
				info = format_columns(o.F.name+" "+o.F.owner+" "+o.F.group+" "+lvl+" "+o.F.permissions)
				in_main = false
			else if selected_menu == 4 then
				info = o
				in_main = false
			end if
			if options.len == 0 then 
				info = "No exploits found"
				continue
			end if
			choices = choices+"\n"+count+".) "+info
			count = count+1
	end for
		if count == 1 then
			selected_menu = 0 
			continue
		end if
		
		print(choices)
		//print("0._Return to Main")
		choice_response = null
		if in_main == true or selected_menu == 0  then 
			menu_response = user_input(color.green+"[ SELECT MENU ] *Exit to Return* --> ")
			if menu_response == "exit" then 
				selecting = false
				return null
			end if
			selected_menu = menu_response.val
		end if
		if selected_menu == 0 and in_main == false then return
		if selected_menu > 0 and in_main == false then 
			choice_response	= user_input(color.green+"[ CHOOSE OPTION ] "+color.cap+color.grey+"* Press 0 to return*"+color.cap+color.white+" --> ")
			if choice_response.val == 0 then 
				selected_menu = 0
				continue
			end if 
			if choice_response.val > options.len then continue
			if choice_response.val == 0 then selected_menu = 0

			attack_choice = user_input(color.orange+"[ CONFIRM ] "+color.cap+color.white+"* Press 1 to use exploit"+color.cap+color.grey+" * Press any to return *"+color.cap+color.white+" --> ")
			attack_choice = attack_choice.val
			if attack_choice == 1 then
				chosen_exploit = options[choice_response.val-1] 
				selected_exploit = chosen_exploit
				selecting = false
				return [selected_menu, selected_exploit]
			end if
		end if
	end while
	print("exiting attack loop . . .")
end function
