if not globals.entry_util then exit("><> ><> ><>")
//////////////////////////////////////////////////////////////  
///======================= UTILS =========================////
////////////////////////////////////////////////////////////

// ><> ><> ><> ><> VARIABLES ><> ><> ><> ><>
color = {};color.white = "<color=#FFFFFF>";color.grey = "<color=#A5A5A5>";color.blue = "<color=#003AFF>";color.cyan = "<color=#00FFE7>";color.purple = "<color=#D700FF>";color.red = "<color=#AA0000>";color.yellow = "<color=#FBFF00>";color.orange = "<color=#FF8701>";color.green = "<color=#00ED03>";color.fill = "><> ><> ><> ><> ><> ><> ><> ><> ><> ><> ><> ><>";color.cap = "</color>";title = "<color=#00FFE7>[<b>SeaShell</b>]</color> ";init = "<color=#00ED03>[SeaShell] <b>init:</b></color> ";error = "<color=#AA0000>[SeaShell] <b>Error:</b></color> ";warning = "<color=#FF8701>[SeaShell] <b>Warning:</b></color> ";
// ><> CORE OBJECTS ><>
base_shell = new ShellObject;base_shell.init();
base_pc = new CompObject;base_pc.init(get_shell.host_computer);
base_file = new FileObject;base_file.init(get_shell.host_computer.File("/"));
// ><> ><> ><> ><> ><> GLOBAL OBJECT CACHE
globals.Shells = [ [base_shell, "MAIN"] ] // our collection of global shell objects
globals.Computers = [ [base_pc, "MAIN"] ] // our collection of global computer objects
globals.Files = [ [base_file, "MAIN"] ] // our collection of global file objects
// ><> ><> ><> ><> ><> GLOBAL VARIABLES
globals.anonymous = false
globals.Current_Path = current_path // a path for more specific commands
globals.Mode = null // basic: no crypto/mx | crypto: crypto, no mx | null: crpto, mx
Current_Shell = get_shell // mutable shell
// ><> ><> ><> ><> ><> todo
globals.Exploits = [] // our collection of global exploit objects
globals.Global_Path = "/home" // our mutable path for 1 or more? objects
Current_Computer = @host_computer // well see how it goes
// ATTACKS 
fwd_machines = [] // collection of machines from a probe with open, fwd ports
local_machines = [] // machines found by ping
// ><> ><> ><> ><> LIBRARIES ><> ><> ><> ><>
meta = null
dirs = ["/lib/metaxploit.so", "/lib/cheese/metaxploit.so",current_path+"/metaxploit.so",launch_path+"/metaxploit.so",home_dir+"/metaxploit.so","/home/guest/metaxploit.so"]
for d in dirs
	meta = include_lib(d)
	if meta then break
end for
if not meta then print(warning+color.red+"<b>metaxploit.so</b> was not found")

dirs = ["/lib/crypto.so", "/lib/cheese/crypto.so",current_path+"/crypto.so",launch_path+"/crypto.so",home_dir+"/crypto.so","/home/guest/crypto.so"]
crypto = null
for d in dirs
	crypto = include_lib(d)
	if crypto then break
end for
if crypto and not meta then globals.Mode = color.yellow+"CO"
if not crypto and not meta then globals.Mode = color.red+"OS"
cfg_label = null
if meta then 
	cfg_label = color.cyan+"SS"
else 
	cfg_label = globals.Mode
end if
// ><> ><> ><> ><> ><> ><> ><> ><>
// ><> ><> ><>  UTILS  ><> ><> ><>
// ><> ><> ><> ><> ><> ><> ><> ><>
Utils = {}
// OBJECT HANDLER
Utils.handle = function(object)
	if (object isa ShellObject) == true then object = object.shell
	if (object isa CompObject) == true then object = object.PC
	if (object isa FileObject) == true then object = object.F
	return object
end function
// PATH HANDLER
Utils.pth = function(p)
	if globals.debug then print(p)
	if p[0] != "/" and Current_Path != "/" then p = Current_Path+"/"+p
	if p[0] != "/" and Current_Path == "/" then p = Current_Path+p
	if p == "./" and Current_Path != "/" then 
		parse = p.split("/")
		print(parse)
		p = parse[0]+"/"
	end if
	return p
end function
//////////////////////////////////////////////////////////////  
///==================== USERS =======================////
////////////////////////////////////////////////////////////

////////////////////////////// USER /////////////////////
Utils.user = function(object)
	object = Utils.handle(object)
	if typeof(object) == "shell" or typeof(object) == "ftpshell" then object = object.host_computer
	if not object then return print("User check error, no object found")
	if object.File("/root").has_permission("r") and object.File("/root").has_permission("w") and object.File("/root").has_permission("x") then return object.File("/root").name
	if object.File("/home") == null then return "unknown"
	for f in object.File("/home/").get_folders
		if f.name=="guest" then continue
		if f.has_permission("r") and f.has_permission("w") and f.has_permission("x") then return f.name
		end for
		return "guest" 
end function
/////////////////////////////// IS ROOT //////////////////////
Utils.is_root = function(object)
	object = Utils.handle(object)
	file = object.File("/root")
	if not file then file = object.File("/")
	return file.has_permission("r") and file.has_permission("w") and file.has_permission("x")
end function
///////////////////////////// CHANGE PW ////////////////////
Utils.change_pw = function(object, user="root", password)
	object = Utils.handle(object)
	if typeof(object) == "shell" then object = object.host_computer
	inputMsg = "Changing password for user " + user +".\nNew password:"
	inputPass = user_input(inputMsg, true)
	output = object.change_password(user, inputPass)
	return output
end function
//////////////////////////////////////////////////////////////  
///==================== FILESYSTEM =======================////
////////////////////////////////////////////////////////////

//////////////////////////////////// DEHASH ///////////////////////////
Utils["cipher"] = function(_, userPass)
	password = crypto.decipher(userPass)
	print(password)
	return password
end function
//////////////////////////////////// FILE DEHASH ///////////////////////////
Utils["decrypt"] = function(shell, file_path)
	object = Utils.handle(shell)
	if file_path[0] != "/" then file_path = Utils.pth(file_path)
	if typeof(object) == "shell" then object = object.host_computer.File(file_path)
	if typeof(object) == "computer" then object = object.File(file_path)
	if not object then exit("decipher: can't find " + file_path)
	if object.is_binary then exit("decipher: can't read " + file_path + ". Binary file")
	if not object.has_permission("r") then exit("decipher: can't read file. Permission denied")
	if object.get_content.len == 0 then exit("decipher: no users found")
	lines = object.get_content.split("\n")
	if lines.len == 1 then
		userPass = lines[0].split(":")
		password = GetPassword(userPass)
	else
		print("Multiple users found.")
		numLine = 1
		for line in lines
			if line.len > 0 then
				print(numLine + ": " + line)
				numLine = numLine + 1
			end if
		end for
		option = ""
		inputOk = false
		while( not inputOk )
			option = user_input("Select user: ").to_int
			if typeof(option) != "number" or (option < 1 or option > lines.len) then
				print("Invalid input. Type a valid number")
			else 
				inputOk = true
			end if
		end while
		userPass = lines[option - 1].split(":")
		print("Selected user: " + userPass[0] + "\nDeciphering...")
		password = GetPassword(userPass)
		print(password)
		return password
end if
end function
//////////////////////////////////// WIPE (handler) ///////////////////////////
Utils["wipe"] = function(obj, param)
	if param == "-l" then 
		Utils.wipe_logs(obj)
	else if param == "-t" then 
		Utils.clean_sys(obj)
	else if param == "-s" and Utils.user(obj) != "2NA" then 
		Utils.wipe_sys(obj)
	else 
		return 
	end if
end function
//////////////////////////////////// TOOL TRANSFER ///////////////////////////
Utils["transfer_tools"] = function(obj, eel_only = null, pathFile = "/home/guest/Desktop/.cache", homeObj = null)
	print(init+" mounting . . .")
	if not homeObj then homeObj = globals.Shells[0][0].shell
	if pathFile[0] != "/" then pathFile = Utils.pth(pathFile)
	obj = Utils.handle(obj)
	files = []
	filenames = ["metaxploit.so", "crypto.so", "payload", "eel", "ss"]
	if eel_only == "-e" then filenames = ["metaxploit.so","eel"];if eel_only == "-t" then filenames = ["metaxploit.so","ss", "crypto.so"]
	dirs = ["/lib/", "/bin/", parent_path(launch_path) + "/", parent_path(program_path) + "/", launch_path+"/", "/lib/cheese/", "/home/guest/"]
	// if you chmod your system you will likely run into errors running this from home pc as non root
	for filename in filenames
		if globals.debug then print(color.white + "attempting "+filename)
		for dir in dirs
			str = dir+filename
			f = homeObj.host_computer.File(str)
			if f then
				if globals.debug then print("Found: "+ dir+filename)
				files = files + [dir + filename]
				break
			end if
		end for
	end for
	if files.len == 0 then print(color.orange+"Error: Cannot get files for transfer.")
	if files.len == 0 then return false
	cache = null
	cache = obj.host_computer.File("/home/guest/Desktop/.cache")
	if cache == null then 
		obj.host_computer.create_folder("/home/guest/Desktop", ".cache")
		cache = obj.host_computer.File("/home/guest/Desktop/.cache")
	end if
	if cache != null then pathFile = cache.path
	for file in files
		homeObj.scp(file, pathFile, obj)
		wait(0.1)
	end for
	// Chown files
	pc = obj.host_computer
	for filename in filenames
		file = pc.File(pathFile + "/" +filename)
		if not file then continue
		file.set_owner("guest")
		file.set_group("guest")
		wait(0.1)
	end for
	return true
end function

//////////////////////////////////// TOOL WIPE ///////////////////////////
Utils.clean_sys = function(obj)
	print(init+" wiping tools from system . . .")
	obj = Utils.handle(obj)
	if typeof(obj) == "shell" or typeof(obj) == "ftpshell" then obj = obj.host_computer
	files = ["ss", "eel", "payload", "metaxploit.so", "crypto.so", "anonymous.dat", "fish.txt"]
	dirs = ["/home/guest", "/bin", "/home", home_dir]
	home_folders = null
	for dir in dirs
		for file in files
			f = obj.File(dir+"/"+file)
			if f then
				n = f.name 
				print(color.yellow+"Deleting: "+f.path)
				del = f.delete
				wait(0.1)
				if del.len < 1 then print(color.green+"Deleted <b>"+n)
			end if
		end for
	end for
end function
//////////////////////////////////// LOG WIPE ///////////////////////////
Utils.wipe_logs = function(obj)
	print(init+" wiping system . . .")
	obj = Utils.handle(obj)
	if typeof(obj) == "shell" or typeof(obj) == "ftpshell" then obj = obj.host_computer
	file = null
	copied = null
	corrupt = obj.File("/etc/fstab")
	if corrupt == null then corrupt = obj.File("/home/guest/anonymous.dat")
	if corrupt and corrupt.has_permission("w") == true then 
		corrupt.set_content(char(10)+char(10)+char(10)+char(10)+char(10)+char(10)+"><>")
		copied = corrupt.copy("/var/", "system.log")
		wait(0.1)
		corrupt.set_content("")
		status = color.green+"corrupted"+color.cap
	else 
		res = obj.touch("/home/", "fish.txt")
		wait(0.1)
		if res == 1 then 
			status = color.red+"Not Corrupted" 
		else
			file = obj.File("/home/fish.txt")
			if file == null then return print(warning+" b8 file wasnt found")
			file.set_content(char(10)+char(10)+char(10)+char(10)+char(10)+char(10)+"><>")
			wait(0.1)
			copied = file.copy("/var/", "system.log")
			status = color.yellow+"corrupted"+color.cap
		end if
	end if
	
	if copied != 1 then print(warning+" -- Unable to wipe the system logs --")
	if copied == 1 then print(title+" system.log was [ "+status+" ]")
	return copied
end function

Utils.wipe_sys = function(object)
	obj = Utils.handle(object)
	if Utils.user(obj) != "root" then return print("You must run as root.")
	if typeof(obj) == "shell" or typeof(obj) == "ftpshell" then obj = obj.host_computer
	confirm = user_input(color.red+"<b>=== Confirm PWN ===\n{"+color.white+obj.public_ip+color.cap+":"+color.yellow+obj.local_ip+color.cap+"}\n"+color.orange+"<b>** YOU CANNOT UNDO THIS ** \n--> ")
	if confirm != "2na" then return
	pc = get_shell.host_computer
	logfile = pc.File("/var/system.log")
	if not logfile then exit("Log file not found.")
	logfile.copy("/home/guest", "system.log")

	filenames = ["System.map", "initrd.img", "kernel.img"]
	for filename in filenames
		file = pc.File("/boot/" + filename)
		if not file then continue
		file.delete
		wait(0.1)
	end for
	filenames = ["xorg.sys", "config.sys", "network.cfg"]
	for filename in filenames
		file = pc.File("/sys/" + filename)
		if not file then continue
		file.delete
		wait(0.1)
	end for

	file = pc.File("/home/guest/ss")
	if file == null then print(file.name+" doesn't exist.")
	file.delete
	logfile = pc.File("/etc/fstab")
	if logfile != null then
		logfile.set_content(char(10)+char(10)+char(10)+char(10)+"><>")
		wait(0.1)
		logfile.move("/var", "system.log")
		print("Log file replaced.")
	else
		exit("Log doesn't exist. Clear logs...")
	end if
	print("Please reboot the machine now.")

end function

//////////////////////////////////////////////////////////////  
///==================== CONNECTION =======================////
////////////////////////////////////////////////////////////
//////////////////////////////////// WHOIS ///////////////////////////
Utils["w1ad3s"] = function(ip)	// ;-; tfw i didnt have to change
	if (is_valid_ip(ip)) and (ip[1] != "w") then return Utils.who(ip)
	Utils.lookup(ip)
end function
Utils.who = function(ip)
	if is_lan_ip(ip) then return
	info = whois(ip)
	parse = info.split("\n")
	domain = parse[0].split(":")[1]
	admin = parse[1].split(":")[1]
	email = parse[2].split(":")[1]
	phone = parse[3].split(":")[1]
	print(color.blue+color.fill+"\nDomain: "+color.white+domain+color.cap+"\n"+"Admin: "+color.red+admin+color.cap+"\n"+"Email: "+color.white+email+color.cap+"\n"+"Phone: "+color.white+phone+color.cap+"\n"+color.blue+color.fill)
end function
Utils.lookup = function(ip)
	print("nslookup: "+nslookup(ip))
end function

//////////////////////////////////// CONNECT ///////////////////////////
Utils.connect = function(object, username = "root", password, addr, port)
	if not object then object = globals.Current_Object
	object = Utils.handle(object)
	if typeof(object) == "computer" then object = get_shell
	choose_type = user_input(color.green+"[ SELECT ]"+color.white+" 1.) SSH  "+color.cap+color.grey+"2.) FTP"+color.cap+"  --> "); choose_type=choose_type.val
	choose_port = user_input(color.grey+"[ ENTER ]"+color.white+" Port for connection"+color.cap+color.grey+" *use 0 for entry port*"+color.cap+" -->  ").to_int
	//choose_port = choose_port.val
	if choose_port != 0 then port = choose_port
	if choose_type == 1 then
		connection = object.connect_service(addr, port, username, password)
		protocol = "ssh"
	else 
		connection = object.connect_service(addr, port, username, password, "ftp")
		protocol = "ftp"
	end if
	print(init+color.white+" attempting remote shell connection via: "+color.grey+protocol)
	if typeof(connection) != "shell" and typeof(connection) != "ftpshell" then 
		return print(warning+color.green+"[ "+protocol+" ] "+color.cap+color.grey+" connection failed at port: "+color.white+port)
	else
		print(color.blue+color.fill)
		print(title+color.green+" [ "+color.white+typeof(connection)+color.cap+" ] ShellObject connection OK !")
		print(color.blue+color.fill)
		print("CONNECTION IP:"+ connection.host_computer.public_ip)
	end if

	return connection
end function

//////////////////////////////////////////////////////////////  
///================== WEB SERVICE =====================////
////////////////////////////////////////////////////////////
//////////////////////////////////// entry ///////////////////////////
Utils["webmanager"] = function(obj, action, arg = null)
	// build
	if action == "-b" then 
		return Utils.site_build(obj, arg)
	// uninstall
	else if action == "-u" then
		return Utils.site_wipe(obj, arg)
	else
		return print("web manager: returning")
	end if

end function
//////////////////////////////////// SOURCE ///////////////////////////
Utils.site_source = function(option = "-h")
	str = null
	if option == "-h" then 
		str = "<!DOCTYPE html>*<style type='text/css'>**body { font: 12px Helvetica, sans-serif; margin:0; overflow-y:auto; height:100%; }**html{*background-color: #131c23;*height:100%;*margin:0; overflow-y:auto;*}**.hackshop {*text-align: center;*    padding: 100px;*padding-top: 25px;*}**.btn {*background-color: #151515;*border: 1px solid #2b4f4f;*color: white;*padding: 8px 8px;*text-align: center;*text-decoration: none;*display: inline-block;*font: 18;*width: 130px;*}**.btn-group{*padding-top: 4px;*}**.btn-sel{*background-color: #2b2b2b;*}*.btn-group button:hover {*background-color: #2b2b2b;*}*</style>*<div class='btn-group' style='text-align: center;'>*<button type='button' class='btn btn-primary btn-sel' id='Main'>Main</button>*<button type='button' class='btn btn-primary' id='HackShopTools'>Tools</button>*<button type='button' class='btn btn-primary' id='HackShopExploits'>Exploits</button>*<button type='button' class='btn btn-primary' id='Jobs'>Jobs</button>*</div>**<div class='hackshop'>*<img src='gecko.png' width='80' height='80' align='center'>*<p style='font-size:18px;'>HackShop</p>*<p>Welcome to my personal store. Buy what you want, I will not ask questions.</p>*</div>*"
	else if option == "-s" then
		str = "<!doctype html>**<style>*h1 { font-size: 16px; text-align: center; color: grey;}*p { color: whitesmoke; }*body { font: 20px Helvetica, sans-serif; color: #333; margin:0; overflow-y:auto; height:100%; }*.btn {*background-color: #006699;*border: 1px solid grey;*color: white;*padding: 8px 8px;*text-align: center;*text-decoration: none;*display: inline-block;*font: 18;*width: 130px;*}*article { display: block; text-align: left; width: 600px; margin: 0 auto; }* html{*background-color: #10063D;*height:100%;*}*.btn-sel{*background-color: #008CD1;*}*.btn-group button:hover {*background-color: #008CD1;*}*.btn-group{*padding-top: 4px;*}*.logo{*text-align: center;*padding: 10px;*}*img{*display: block;*margin: 0 auto;*}*</style>*</div>*<div padding:11px;'>*<div class='btn-group' style='text-align: center;'>*<button type='button' class='btn btn-primary' id='Home'>Main</button>*<button type='button' class='btn btn-primary' id='ISPConfig'>Services</button>*</div>**</div>*<article>*<div class='logo text-center'>*<p><i>*Lucentan. The Internet Provider Service designed for you!*<font size=13>*@ Rental servers available*@ Cancel your subscription at any time*@ Subscription is paused when you don't use it*</font>*</i></p>*<img src='isp.jpg' width='440' height='180' align='center'>@*</div>*</article>*"
		str = str.replace("@","<br"+">")	
	else if option == "-b" then
		str = "<!DOCTYPE html>*<style type='text/css'>*h1 { font-size: 40px; text-align: center}*body { font: 12px Helvetica, sans-serif; color: #333; margin:0; overflow-y:auto; height:100%; }*.btn {*background-color: #072C3F;*border: 1px solid #4B4B4B;*color: white;*padding: 8px 8px;*font-size: 18;*width: 130px; *}*.btn-group button:hover {*background-color: #137AACFF;*}**article { display: block; text-align: left; width: 600px; margin: 0 auto; }*html{*background-color: white;*height:100%;*}*.btn-group{*text-align: center;*}*.logo{*text-align: center;*padding: 10px;*}*img{*display: block;*margin: 0 auto;*}*</style>*<div style='background-color:#4A6470;color:white;padding:11px;'>*<font size='30'>Eners</font>*</div>*<div style='background-color:#00445A;color:white;padding:5px;'>*<div class='btn-group'>*<button type='button' class='btn btn-primary' id='Home'>Home</button>*<button type='button' class='btn btn-primary' id='RegisterBank'>Register</button>*<button type='button' class='btn btn-primary' id='LoginBank'>Login</button>*</div>*</div>*<article>*<div class='logo text-center'>*<p>*Do you need a reliable bank to store your money?@In Eners we have the solution.*</p>*<img src='bank.png' width='120' height='120' align='center'>*</div>*</article>*"
		str = str.replace("@","<br"+">")	
	else if option == "-m" then
		// mail? soon
	else if option == "ol" then 
		str = "<!DOCTYPE html>*<style type='text/css'>**body { font: 12px Helvetica, sans-serif; margin:0; overflow-y:auto; height:100%; tags='viper libraries secure bank mail servers internet BTC server ISP';}**html{*background-color: #131c23;*height:100%;*margin:0; overflow-y:auto;*}*.header {*width: 100%;*height:10%;*background:#131c23;*justify-content:center;*padding-bottom:40px;*margin-bottom: 10px;*align-text:center;*border-radius:10px;*}*.hackshop {*text-align: center;*padding: 100px;*padding-top: 25px;*margin-left: 30px;*margin-right: 30px;*background: linear-gradient(to bottom,#0b4f61, #005d75); /* Aquatic linear gradient, rip */*border-radius: 10px;*}*.hackshop p {*font-size:18px;*}*.hackshop h1 {*text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);*}*.hackshop h2 {*color: #28C6FF;*text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);*}*.hackshop h3 {*color: white;*}*.hackshop ul {*text-align: center;*margin: 0 auto;*justify-content:center;*max-width:500px;*}**.hackshop li {*list-style-type: none;*margin-bottom: 5px;*font-size:20px;*}*.btn {*background-color: #131c23;*border: 1px solid #2b4f4f;*color: white;*padding: 8px 8px;*text-align: center;*text-decoration: none;*display: inline-block;*font: 18;*width: 130px;*}**.btn-group{*padding-top: 4px;*}**.btn-sel{*background-color: #2b2b2b;*}*.btn-group button:hover {*background-color: #131c23;*color: #00FEFA*}*.btn-group button {*background-color: #2b2b2b;*color: #00FEFA*}*.footer {*position: absolute;*right: 5px;*bottom: 10px;*padding: 2px;*background-color: #000;*font-size: 10px;*}*</style>*<title>OnlyLibs ::|:: OnlyFoundation websitetitle>*@*<div class='hackshop'>*<div class='header'>**</div>*<img src='gecko.png' width='80' height='80' align='center'>*<h2 style='font-size:50px;'>O<h1 style='font-size:30px; color:white;'>nly<h1 style='font-size:50px; color:#28C6FF;'>L<h1 style='font-size:30px;color:white;'>ibs</p>*<small style='font-size:12px;color:#07FE00'>Our mission is to provide system libraries for all of your needs.</small>@<small style='color:white; font-size:12px;'>Download directly from our site, or use our repo with command@'apt-get addrepo 71.204.103.26'</small>@*<h3 style='color:#07FE00'>Download</h3>*<div class='btn-group' style='text-align: center;'>**<button type='button' class='btn btn-primary' id='HackShopTools'>Libraries</button>*<button type='button' class='btn btn-primary' id='HackShopExploits'>Exploits</button>*<button type='button' class='btn btn-primary' id='About' onclick='toggleAbout()'>About</button>*<div id='aboutContent' style='display:none;padding:5px; margin-top:10px;padding-top:10px;background:#131c23;border-radius:10px;'>*<h3 style='color:#005d75'>About OnlyLibs</h3></br>*<p>Providing the secure libraries you need!@</p>*<h3 style='color:#005d75'>About OnlyFoundation</h3></br>*<p>The mission of the OnlyFoundation is to assist players with the tools they need to succeed.@ Providing a suite of libraries and software, OnlyFoundation encourages and facilitates all player content.</p>*<p>Contributors are welcome to OnlyFoundation</p>*<h3 style='color:#005d75'>Other Sites</h3></br>*<p>www.sparticorpc.net (OnlyHacks)</p>*</div>*</div>*<small style='color:#005d75; background-color: #131c23;padding:1.5px;border-radius:1.5px;'>Available Libraries</small>*<ul>*<li>> libhttp.so 1.1.5</li>*<li>> libssh.so 1.0.0</li>*<li>> librepository.so 1.0.3</li>*<li>> libftp.so 1.3.5</li>*<li>> kernel_router.so 1.9.5</li>*</ul>*<div style='color:red;border-radius:10px;'>!Coming soon! --> <button type='button' class='btn btn-primary' id='AboutNPM' onclick='toggleAbout2()' style='border-radius:10px;'>NPM</button>@</div>	*<div id='aboutNPM' style='display:none;padding:5px; margin-top:10px;padding-top:10px;background:#131c23;border-radius:10px;'>*<h3 style='color:#005d75'>About NPM</h3>*<ul>*<li>> Search for a suite of system libraries + tools</li>*<li>> Catalog & report vulnerable software</li>*<li>> Access to OnlyFoundation repo network</li>*<li>> WIP module bundle system</li>*</ul>*</div>*<div style='color:red;background-color:#131c23;border-radius:10px;'><h3 style='color:#005d75';>OnlyFoundation Services</h3>**<p>> ISP Rentals@</p>*<button type='button' class='btn btn-primary' id='ISPConfig'>Services</button>*<p>> Banking@</p>*<button type='button' class='btn btn-primary' id='RegisterBank'>Register</button>*<button type='button' class='btn btn-primary' id='LoginBank'>Login</button>*<p>> Mail@</p>*<button type='button' class='btn btn-primary' id='RegisterMail'>Register</button>*<button type='button' class='btn btn-primary' id='LoginMail'>Login</button>**<div class='footer'><span style='color:#fff;'>This website is part of OnlyFoundation</span></div>*<script>*function toggleAbout() {*var aboutButton = document.getElementById('About')*var aboutContent = document.getElementById('aboutContent');*if (aboutContent.style.display === 'none') {*aboutContent.style.display = 'block';*} else {*aboutContent.style.display = 'none';*}*}*function toggleAbout2() {*var aboutButton = document.getElementById('AboutNPM')*var aboutContent = document.getElementById('aboutNPM');*if (aboutContent.style.display === 'none') {*aboutContent.style.display = 'block';*} else {*aboutContent.style.display = 'none';*}*}*</script>"
		//str = "<!DOCTYPE html>*<style type='text/css'>**body { font: 12px Helvetica, sans-serif; margin:0; overflow-y:auto; height:100%; tags='viper';}**html{*background-color: #131c23;*height:100%;*margin:0; overflow-y:auto;*}*.header {*width: 100%;*height:10%;*background:#131c23;*justify-content:center;*padding-bottom:40px;*margin-bottom: 10px;*border-radius:10px;*}*.hackshop {*text-align: center;*padding: 100px;*padding-top: 25px;*margin-left: 30px;*margin-right: 30px;*background: linear-gradient(to bottom,#0b4f61, #005d75); /* Aquatic linear gradient, rip */*border-radius: 10px;*}*.hackshop p {*font-size:18px;*}*.hackshop h1 {*text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);*}*.hackshop h2 {*color: #28C6FF;*text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);*}*.hackshop h3 {*color: white;*}*.hackshop ul {*text-align: center;*margin: 0 auto;*justify-content:center;*max-width:500px;*}**.hackshop li {*list-style-type: none;*margin-bottom: 5px;*font-size:20px;*}*.btn {*background-color: #131c23;*border: 1px solid #2b4f4f;*color: white;*padding: 8px 8px;*text-align: center;*text-decoration: none;*display: inline-block;*font: 18;*width: 130px;*}**.btn-group{*padding-top: 4px;*}**.btn-sel{*background-color: #2b2b2b;*}*.btn-group button:hover {*background-color: #131c23;*color: #00FEFA*}*.btn-group button {*background-color: #2b2b2b;*color: #00FEFA*}*.footer {*position: absolute;*right: 5px;*bottom: 10px;*padding: 2px;*background-color: #000;*font-size: 10px;*}*</style>*<title>OnlyLibs ::|:: OnlyFoundation websitetitle>*@*<div class='hackshop'>*<div class='header'></div>*<img src='gecko.png' width='80' height='80' align='center'>*<h2 style='font-size:50px;'>O<h1 style='font-size:30px; color:white;'>nly<h1 style='font-size:50px; color:#28C6FF;'>L<h1 style='font-size:30px;color:white;'>ibs</p>*<small style='font-size:12px;color:#07FE00'>Our mission is to provide system libraries for all of your needs.</small>@<small style='color:white; font-size:12px;'>Download directly from our site, or use our repo with command@'apt-get addrepo 71.204.103.26'</small>@*<h3 style='color:#07FE00'>Download</h3>*<div class='btn-group' style='text-align: center;'>**<button type='button' class='btn btn-primary' id='HackShopTools'>Libraries</button>*<button type='button' class='btn btn-primary' id='HackShopExploits'>Exploits</button>*<button type='button' class='btn btn-primary' id='About' onclick='toggleAbout()'>About</button>*<div id='aboutContent' style='display:none;padding:5px; margin-top:10px;padding-top:10px;background:#131c23;border-radius:10px;'>*<h3 style='color:#005d75'>About OnlyLibs</h3></br>*<p>Providing the secure libraries you need!@</p>*<h3 style='color:#005d75'>About OnlyFoundation</h3></br>*<p>The mission of the OnlyFoundation is to assist players with the tools they need to succeed.@ Providing a suite of libraries and software, OnlyFoundation encourages and facilitates all player content.</p>*<p>Contributors are welcome to OnlyFoundation</p>*<h3 style='color:#005d75'>Other Sites</h3></br>*<p>www.sparticorpc.net (OnlyHacks)</p>*</div>*</div>*<small style='color:#005d75; background-color: #131c23;padding:1.5px;border-radius:1.5px;'>Available Libraries</small>*<ul>*<li>> libhttp.so 1.1.5</li>*<li>> libssh.so 1.0.0</li>*<li>> librepository.so 1.0.3</li>*<li>> libftp.so 1.3.5</li>*<li>> kernel_router.so 1.9.5</li>*</ul>*<div style='color:red;'>!Coming soon! --> NPM</div>*<div class='footer'>This website is part of OnlyFoundation</div>*<script>*function toggleAbout() {*var aboutButton = document.getElementById('About')*var aboutContent = document.getElementById('aboutContent');*if (aboutContent.style.display === 'none') {*aboutContent.style.display = 'block';*} else {*aboutContent.style.display = 'none';*}*}*</script>"
		str = str.replace("@","<br"+">")	
	else
		return print(warning+"invalid website choice")
	end if
	str = str.replace("*",char(10)).replace("'","""")
	//str = str.replace("'","""")
	if globals.debug then print str
	return str
end function
//////////////////////////////////// SITE WIPE ///////////////////////////
Utils.site_wipe = function(obj, arg = null)
	obj = Utils.handle(obj)
	if typeof(obj) == "shell" or typeof(obj) == "ftpshell" then obj = obj.host_computer
	if not arg then
		del1 = obj.File("/Public").delete
		if del1.len > 1 then print("Deleted: /Public")
		del2 = obj.File("/server").delete
		if del2.len > 1 then print("Deleted: /server")
	else if arg == "html" then
		del1 = obj.File("/Public/htdocs/website.html").delete
		if del1.len > 1 then print("Deleted: /Public")
	end if
end function
//////////////////////////////////// SITE BUILD ///////////////////////////
Utils.site_build = function(obj, arg)
	if not arg then arg = "-s"
	print(init+color.yellow+"Site Builder")
	content = Utils.site_source(arg)
	if not content then return print("site builder: there was an error")
	obj = Utils.handle(obj)
	if typeof(obj) == "shell" or typeof(obj) == "ftpshell" then obj = obj.host_computer
	public = obj.File("/Public")
	if not public then 
		create = obj.create_folder("/", "Public")
		if create == false then return print(warning+"failed to install Public folder")
		docs = obj.create_folder("/Public", "htdocs")
		if docs == false then return print(warning+"failed to install htdocs folder")
		html = obj.touch("/Public/htdocs", "website.html")
		if obj.File("/Public/htdocs/website.html") == null then return print(warning+"failed to create website.html")
	else if not obj.File("/Public/htdocs") then 
		docs = obj.create_folder("/Public", "htdocs")
		if docs == false then return print(warning+"failed to install htdocs folder")
		html = obj.touch("/Public/htdocs", "website.html")
		if obj.File("/Public/htdocs/website.html") == null then return print(warning+"failed to create website.html")
	else if not obj.File("/Public/htdocs/website.html") then 
		html = obj.touch("/Public/htdocs", "website.html")
		if obj.File("/Public/htdocs/website.html") == null then return print(warning+"failed to create website.html")
	end if
	server = obj.File("/server")
	if not server then
		create = obj.create_folder("/", "server")
		if not obj.File("/server") then return print(warning+"failed to create the web service /server")
		downloads = obj.create_folder("/server", "downloads")
		if downloads == false then return print("error creating downloads folder")
	else if not obj.File("/server/downloads") then 
		downloads = obj.create_folder("/server", "downloads")
		if downloads == false then return print("error creating downloads folder")
	end if
	obj.File("/Public/htdocs/website.html").set_content(content)
	wait(0.1)
	print(color.green+"Site Build --> <b>OK")
end function

//////////////////////////////////////////////////////////////  
///====================== MISC =========================////
////////////////////////////////////////////////////////////
Utils.random_ip = function()
	while true //loop
		ip = floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) //Generate a random ip
		if not is_valid_ip(ip) then continue //If the ip is invalid, try again
		if is_lan_ip(ip) then continue //If the ip is a lan ip, try again
		//if not get_router(ip) then continue //do not check for this cause most of the time there will be a router and this slows down the process A LOT
		return ip //If the ip is valid, break out of the loop
	end while
end function
//////////////////////////////////// RANDOM PLAYER IP ///////////////////////////
Utils.player_ip = function(p)
	print("Fishing @ port ["+p+"] . . . ><> . . . ><> . . . ><>")
	common_ports = ["21", "22", "25", "80", "141", "8080", "1222", "1542", "3306","3307","3308","6667", "37777"]
	if not common_ports.indexOf(p) then print(warning+p+" is not a commonly used port!\nAre you trying to catch a marlin?")
	locals.ip = null
	ip = null
	i = locals.ip
	p = p.val
	while true //loop
		i = floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) //Generate a random ip
		if not is_valid_ip(i) or is_lan_ip(i) then continue //If the ip is invalid, try again
		r = get_router(i);if not r then continue;ports = r.used_ports
		if ports.len == 0 then continue;
			for port in ports
				if port.port_number == p then
					return i
				end if
			end for
		//end for 
	end while
end function
Utils.router_catch = function(obj, libVersion)
	if not libVersion then return print(error+"lib: invalid usage")
	obj = Utils.handle(obj) 
	if typeof(obj) == "shell" or typeof(obj) == "ftpshell" then obj = obj.host_computer

	print(init+"Trying to catch lib: <b>"+color.green+"kernel_router"+color.cap+" v"+color.green+libVersion+"\n"+color.fill)
	locals.ip = null
	ip = null
	i = locals.ip
	while true //loop
		i = floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) //Generate a random ip
		if not is_valid_ip(i) or is_lan_ip(i) then continue //If the ip is invalid, try again
		r = get_router(i);if not r then continue;
		if r.kernel_version != libVersion then continue; return i
	end while
end function
Utils.lib_catch = function(obj, lib, libVersion)
	if not lib or not libVersion then return print(error+"lib: invalid usage")
	obj = Utils.handle(obj) 
	if typeof(obj) == "shell" or typeof(obj) == "ftpshell" then obj = obj.host_computer
	valid_libs = ["ssh", "ftp", "http", "sql", "rshell", "repository", "chat"]
	if valid_libs.indexOf(lib) == null then return print(warning+color.yellow+"invalid lib specified")
	print(init+"Trying to catch lib: <b>"+color.green+lib+color.cap+" v"+color.green+libVersion+"\n"+color.fill)
	locals.ip = null
	ip = null
	i = locals.ip
	while true //loop
		i = floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) + "." + floor((rnd * 255) + 1) //Generate a random ip
		if not is_valid_ip(i) or is_lan_ip(i) then continue //If the ip is invalid, try again
		r = get_router(i);if not r then continue;ports = r.used_ports;
		if ports.len == 0 then continue;
		for port in ports
			service = r.port_info(port)
			parsed = service.split(" ")
			//service_lib = service_parsed[0]
			if parsed[0] != lib then continue
			if parsed[1] != libVersion then continue
			if parsed[1] == libVersion then
				obj.touch("/root/"+lib+libVersion)
				wait(0.1)
				if obj.File("/root/"+lib+libVersion) then obj.File("/root/"+lib+libVersion).set_content(i)
				wait(0.1)
				if obj.File("/root/"+lib+libVersion) then print(color.white+"saved:"+color.cap+color.yellow+" /root/"+lib+libVersion)
				return i
			end if
		end for
		//end for 
	end while
end function

welcome_msg = function()
	print("       .               "+color.red+"               __..._")
	print("      ':'              "+color.red+"           ..-'      o.")
	print("    ___:____     |'\/'|"+color.red+"         .-'           :")
	print("  ,'        `.    \  / "+color.red+"      _..'           .'__..--<")
	print("  |  O        \___/  | "+color.red+"...--""              '-.")
	print("~^~^~^~^~^~^~^~^~^~^~^~"+color.red+"^~^~^~^~^~^~^~^~^~^~^~^~")
	print(color.blue+color.fill)
	print(color.red+ ".                                            /\")
	print(color.cyan+"   _____            </color><color=#AA0000> _____ _          _ _   {.-}")  
	print(color.cyan+"  / ____|           </color><color=#AA0000>/ ____| |        | | | ;_.-'\") 
	print(color.cyan+" | (___   ___  __ _</color><color=#AA0000>| (___ | |__   ___| | |{    _.}_") 
	print(color.cyan+"  \___ \ / _ \/ _` |</color><color=#AA0000>\___ \| '_ \ / _ \ | | \.-' /  `,") 
	print(color.cyan+"  ____) |  __/ (_| |</color><color=#AA0000>____) | | | |  __/ | |  \  |    /") 
	print(color.cyan+" |_____/ \___|\__,_|</color><color=#AA0000>_____/|_| |_|\___|_|_|   \ |  ,/")
	print(color.red+".                                             \|_/")
	print(title+" </color><color=#00ED03>- v1.0.4 - Made with <3 by</color><color=#00FFE7> Tuna Terps" )
	print(color.blue+color.fill)
end function

Utils.got_rooted = function()
	print(color.green+"                                   ____")
	print(color.green+"                               /\|    ~~\")
	print(color.green+"                             /'  |   ,-. `\")
	print(color.green+"                            |       | X |  |")
	print(color.green+"                           _|________`-'   |X")
	print(color.green+"                         /'          ~~~~~~~~~,")
	print(color.green+"                       /'             ,_____,/_")
	print(color.green+"                    ,/'        ___,'~~         ;")
	print(color.green+"~~~~~~~~|~~~~~~~|---          /  X,~~~~~~~~~~~~,")
	print(color.green+"        |       |            |  XX'____________'")
	print(color.green+"        |       |           /' XXX|            ;")
	print(color.green+"        |       |        --x|  XXX,~~~~~~~~~~~~,")
	print(color.green+"        |       |          X|     '____________'")
	print(color.green+"        |   o   |---~~~~\__XX\             |XX")
	print(color.green+"        |       |          XXX`\          /XXXX")
	print(color.green+"~~~~~~~~'~~~~~~~'               `\xXXXXx/' \XXX")
	print(color.green+"                                 /XXXXXX\")
	print(color.green+"                               /XXXXXXXXXX\")
	print(color.green+"                             /XXXXXX/^\X2NAXX\")
	print(color.green+"                            ~~~~~~~~   ~~~~~~~")
end function

Utils.scuba_msg = function()
	print(color.blue+"                                   __")
	print(color.blue+"                                  |::|")
	print(color.blue+"                                  |::|")
	print(color.blue+"                 _..---.._        |::|")
	print(color.blue+"               .' /     \ `.      |::|")
	print(color.blue+"              /  /       \  \     |::|")
	print(color.blue+"             /  /         \  \    |  |")
	print(color.blue+"            /   |         |   \   |  |")
	print(color.blue+"           |    |   ___   |    |  |  |")
	print(color.blue+"  _`'..._-.|____|__|\\/|__|____|..|  | ___")
	print(color.blue+"  ____...  | .- - - - - - - -. | .|  |_   `'")
	print(color.blue+"    ____.  /.-----------------.\ .|  | ```..")
	print(color.blue+"``..      //'  `-._     _.-`  '\\ |  | ..")
	print(color.blue+"    ...-' ||'  /.-.\   /.-.\  '|| `..\...`'`")
	print(color.blue+"   ---._` \\:_ \("+color.red+"o"+color.cap+color.blue+")/...\("+color.red+"o"+color.cap+color.blue+")/._:// .----..---")
	print(color.blue+"    ___.._  __....   ._....._.....___")
	print(color.blue+"'' ___.._  __....   ._....._.....___")

end function
Utils.fish_tank_msg = function()
	print(color.blue+"|  \|/  *    .  .    . .. .      |")
	print(color.blue+"|   \|*/*     ..     _ . .       |")
	print(color.blue+"|   *|| |     ..   ><_> . _      |")
	print(color.blue+"|   |`|/     _ .         <_><    |")
	print(color.blue+"|    \|    ><_>              _   |")
	print(color.blue+"`-----!---------!!!---!!!---/ \--'")
end function
Utils.paired_msg = function()
	print(color.white+"   _______________                        |*\_/*|________")
	print(color.white+"  |  ___________  |     "+color.red+".-.     .-."+color.cap+color.white+"      ||_/-\_|______  |")
	print(color.white+"  | |           | |    "+color.red+".****. .****."+color.cap+color.white+"     | |           | |")
	print(color.white+"  | |   "+color.green+"0   0"+color.cap+color.white+"   | |    "+color.red+".*****.*****."+color.cap+color.white+"     | |   "+color.red+"0   0"+color.cap+color.white+"   | |")
	print(color.white+"  | |     -     | |     "+color.red+".*********."+color.cap+color.white+"      | |     -     | |")
	print(color.white+"  | |   \___/   | |      "+color.red+".*******."+color.cap+color.white+"       | |   \___/   | |")
	print(color.white+"  | |___     ___| |       "+color.red+".*****."+color.cap+color.white+"        | |___________| |")
	print(color.white+"  |_____|\_/|_____|        "+color.red+".***."+color.cap+color.white+"         |_______________|")
	print(color.white+"    _|__|/ \|_|_"+color.red+"............"+color.red+".*.............."+color.cap+color.white+"_|________|_")
	print(color.white+"   / ********** \                          / ********** \")
	print(color.white+" /  ************  \                      /  ************  \")
	print(color.white+"--------------------                    --------------------")
end function
//////////////////////////////////////////////////////////////  
///======================== OTHER =======================////
////////////////////////////////////////////////////////////
///////////////////////////////////////////
// Get local library.
// Returns: Metalib library.
///////////////////////////////////////////
get_library = function(libname = "metaxploit.so")
	mx = null
	libpaths = ["/lib/", parent_path(program_path) + "/", "/lib/cheese/", "/home/guest/"]
	for libpath in libpaths
		mx = include_lib(libpath + libname)
		if not mx and globals.debug then
			print("Warning: Library not found at '" + libpath + "'.")
		else if mx then
			if not globals.debug then print("Information: Found library '" + libname + "'.")
			break
		end if
	end for
	return mx
end function
///////////////////////////////////////////
// Load local library.
// Returns: Metalib library.
///////////////////////////////////////////
load_library = function(libname = "kernel_module.so")
	if not libname then exit("Error: Library name was not given.")
	if typeof(libname) != "string" then exit("Error: You need to pass a string.")
	
	mx = get_library()
	if not mx then return print(warning+" metxaploit.so not found")
	
	lib = null
	libpaths = ["/lib/", parent_path(program_path) + "/"]
	for libpath in libpaths
		lib = mx.load(libpath + libname)
		if not lib and globals.debug then
			print("Warning: Library not found at '" + libpath + "'.")
		else if lib then
			if globals.debug then print("Information: Found library '" + libname + "'.")
			break
		end if
	end for
	return lib
end function
//////////////////////////////////////
// Description: Get all remote hacks.
// Returns: Hacks
//////////////////////////////////////
local_hack_info = "LIB MEM VALUE"
remote_hack_info = "MEM VALUE" 
get_remote_hacks = function(addr = null, port = 0)
	result = {}
	// Run against a remote address/port combination
	if not is_valid_ip(addr) then
		print("Error: Invalid IP address given.")
		return result
	end if
	
	mx = get_library()
	if not mx then return result
	
	netsession = mx.net_use(addr, port)
	if not netsession then
		print("Error: Cannot get net session.")
		return result
	end if
	
	dump = netsession.dump_lib
	if not dump then
		print("Error: Cannot dump library.")
		return result
	end if
	print("Getting remote hacks: <color=#A50000><b>" + dump.lib_name + ":" + dump.version + "</b></color>")

	hacks = []	
	addresses = mx.scan(dump)
	for mem in addresses
		pair = {}
		values = []
		print("Address: " + mem)
		data = mx.scan_address(dump, mem)
		strings = data.split("Unsafe check: ")
		for string in strings
			if string == strings[0] then continue
			
			value = string[string.indexOf("<b>")+3:string.indexOf("</b>")]
			print(" --> " + value)
			values = values + [value]
		end for
		pair["memory"] = mem
		pair["values"] = values
		hacks = hacks + [pair]
		if globals.debug then 
			remote_hack_info = remote_hack_info +"\n "+mem+" "+values
		end if 
	end for
	if globals.debug then print(format_columns(remote_hack_info))
	result["dump"] = dump
	result["hacks"] = hacks
	return result
end function

//////////////////////////////////////
// Description: Get all local hacks.
// Returns: Hacks
//////////////////////////////////////
get_local_hacks = function()
	filenames = ["net.so", "init.so", "kernel_module.so", "kernel_router.so"]
	hacks = []

	mx = get_library()
	if not mx then return hacks

	for filename in filenames
		dump = mx.load("/lib/" + filename)
		if not dump then
			print("Error: Could not find " + filename)
			continue
		end if
		print("Getting local hacks: <color=#A50000><b>" + filename + "</b></color>")

		addresses = mx.scan(dump)
		for mem in addresses
			hack = {}
			values = []
			if globals.debug then print("Address: " + mem)
			data = mx.scan_address(dump, mem)
			strings = data.split("Unsafe check: ")
			for string in strings
				if string == strings[0] then continue
			
				value = string[string.indexOf("<b>")+3:string.indexOf("</b>")]
				if globals.debug then print(" --> " + value)
				values = values + [value]
			end for
			hack["metalib"] = filename
			hack["memory"] = mem
			hack["values"] = values
			hacks = hacks + [hack]
			if globals.debug then 
				local_hack_info = local_hack_info +"\n " +filename+" "+mem+" "+values
			end if 
		end for
		if globals.debug then print(format_columns(local_hack_info))
	end for
	return hacks
end function

// netsesh.src --> rinse and repeat --> replacement for autohack
// 
///////////////////////////////////////////////////////////////////
////////////////////////////////// SHELLS
////////////////////
// 1.) once we have selected our intended exploit object, then we do something ?
root = null
selected_menu = 0
selected_exploit = null
// 
// 
auto_hack = function(addr, port, data=null)
	remote_shells = []
	remote_comps = []
	remote_files = []
	remote_others = []
	chosen_exploit = null 
	// begin a task to begin a net session hack
	if not is_valid_ip(addr) then return print("Not a valid ip: "+addr)
	if (port < 0 or port > 65535) then return print("Error: Invalid port number.") 
	if not data then data = "pass"
	result = null
	if port == 0 then
		data = data 
		print("router detected") 
		result = get_remote_hacks(addr)
	else 
		result = get_remote_hacks(addr, port)
	end if
	if not result then return print(" No exploit result found")
	shell = null
	metax = result["dump"]
	hacks = result["hacks"]
	if not hacks or hacks.len == 0 then return print("No exploits found for this process")
	// allocate the hacks into memory
	for hack in hacks
		print("Address: " + hack["memory"])
		for value in hack["values"]
			print(" --> " + value)
			result = metax.overflow(hack["memory"], value, data)
			if not result then continue
			if typeof(result) == "shell" then remote_shells = remote_shells + [result]
			if typeof(result) == "computer" then remote_comps = remote_comps + [result]
			if typeof(result) == "file" then remote_files = remote_files + [result]
			if typeof(result) == "string" or typeof(result) == "number" then remote_others = remote_others + [result]
			if typeof(result) == "string" then print(color.green+"result found of string: "+result) 
			if typeof(result) == "number" then print(color.green+"result found of number: "+result)
			if typeof(result) == "shell" then print(color.green+"result found of shell: "+result) 
			if typeof(result) == "computer" then print(color.green+"result found of computer: "+result)	
		end for
	end for
	if remote_shells.len == 0 and remote_comps.len == 0 and remote_files.len == 0 and remote_others.len == 0 then return print(warning+" no remote hacks found") 
	choice_array = [remote_shells, remote_comps, remote_files, remote_others]
	shell_objects = []
	comp_objects = []
	file_objects = []
	other_objects = []
	index = 0
	// loop the exploit objects
	for choice in choice_array
		for exploit in choice
			if index == 0 then 
				a = new ShellObject
				a.init(exploit)
				shell_objects = shell_objects + [ a ]
			else if index == 1 then 
				b = new CompObject
				b.init(exploit)
				comp_objects = comp_objects + [ b ]
			else if index == 2 then
				c = new FileObject
				c.init(exploit)
				file_objects = file_objects + [ c ]
			else if index == 3 then  
				//d = new OtherObject
				//d.init(exploit)
				other_objects = other_objects + [ exploit ]
			end if
		end for
		index = index + 1
	end for    
	remote_shells = shell_objects
	remote_comps = comp_objects
	remote_files = file_objects
	remote_others = other_objects
	
	ip_label = addr
	if globals.anonymous == true then ip_label = "[hidden]"
	print(color.white+" Beginning"+color.green+" remote"+color.cap+" exploit"+color.cap+" menu @ "+color.grey+ip_label+color.cap+":"+color.purple+port)
	
	attack_result = exploit_menu(remote_shells, remote_comps, remote_files, remote_others)
	if attack_result == null then return null
	
	selected_menu = attack_result[0]
	selected_exploit = attack_result[1]
	if typeof(selected_exploit) == null then return print(warning+" no exploits returned from the scan")
	attacking = true 
	default = null 
	while attacking == true
	if attacking == false or typeof(root) == "shell" or typeof(root) =="ftpshell" then break 
	if (root isa ShellObject) == true then break
	if remote_shells.len == 0 and remote_files.len == 0 and remote_comps.len == 0 then break
	// SHELL 
		if selected_menu == 1 then
			addon = ""
			user = selected_exploit.user
			//if globals.anonymous == false then addon = "\n"+color.white+"Bank: "+color.cap+selected_exploit.bank+"\n"+color.white+"Mail: "+color.cap+selected_exploit.email
			default_color = color.white
			if user == "root" then default_color = color.green
			input = user_input(color.purple+"Shell Object [ "+default_color+user+color.cap+" ]\n1.) PW Read + Escalation \n2.) Drop Payload\n3.) CHMOD \n4.) PWN \n5.) Pass Shell\n0.) Exploit Main Menu\n--> ")
			input = input.val 
			if input == 1 then 
				root = selected_exploit.pw_attack(true)
				if not root then attacking = true 
				if typeof(root) == "shell" or typeof(root) == "string" then 
					//root = selected_exploit
					return selected_exploit
				end if
			else if input == 2 then
				Utils.transfer_tools(selected_exploit.shell)
			else if input == 3 then 
				p = user_input("[path]--* Enter for / *--> ")
				if p.len == 0 then p = null
				u = user_input("[user]--* Enter for guest *--> ")
				if u.len == 0 then u = null
				s = user_input("[scope]--* Enter for +wrx *--> ")
				if s.len == 0 then s = null
				selected_exploit.chmod_attack(p,u,s)
			else if input == 4 then
				confirm = user_input(color.red+"<b>=== Confirm PWN ===\n{"+color.white+selected_exploit.pc.public_ip+color.cap+":"+color.yellow+selected_exploit.pc.local_ip+color.cap+"}\n"+color.orange+"<b>** YOU CANNOT UNDO THIS ** \n--> ")
				if confirm == "pwn" then selected_exploit.sys_pwn
			else if input == 5 then
				globals.Current_Path = selected_exploit.home  
				root = selected_exploit
				attacking = false
			else if input == 0 then 
				attack_result = exploit_menu(remote_shells, remote_comps, remote_files, remote_others)
				selected_menu = attack_result[0]
				selected_exploit = attack_result[1]
			end if
		// COMPUTER 
		else if selected_menu == 2 then
			addon = ""
			user = selected_exploit.user
			if globals.anonymous == false then addon = "\n"+color.white+"Bank: "+color.cap+selected_exploit.bank+"\n"+color.white+"Mail: "+color.cap+selected_exploit.email
			input = user_input(color.blue+"Computer Object [ "+color.white+user+color.cap+" ]——{"+color.grey+selected_exploit.PC.local_ip+color.cap+"}\n"+addon+"\n1.) PW Attack \n2.) CHMOD \n3.) Browse FS\n4.) PWN\n5.) Pass Computer Object\n0.) Main Menu\n--> ")
			input = input.val 
			if input == 1 then
				root = selected_exploit.pw_attack(true, addr, port)
				if (root isa ShellObject) == true then 
					attacking = false
					return root
				end if
			else if input == 2 then
				p = user_input("[path]--* Enter for / *--> ")
				if p.len == 0 then p = null
				u = user_input("[user]--* Enter for guest *--> ")
				if u.len == 0 then u = null
				s = user_input("[scope]--* Enter for +wrx *--> ")
				if s.len == 0 then s = null
				selected_exploit.chmod_attack(p,u,s)
			else if input == 3 then
				selected_exploit.fs
				//p = user_input("cat: specify path -- *Enter for /* --> ")
				//if p.len == 0 then p = null
				//selected_exploit.cat_attack(p)
			else if input == 4 then
				confirm = user_input(color.red+"<b>=== Confirm PWN ===\n{"+color.white+selected_exploit.PC.public_ip+color.cap+":"+color.yellow+selected_exploit.PC.local_ip+color.cap+"}\n"+color.orange+"<b>!! YOU CANNOT UNDO THIS !! \n--> ")
				if confirm == "pwn" then selected_exploit.sys_pwn
			else if input == 5 then
				globals.Current_Path = selected_exploit.home 
				attacking = false
				root = selected_exploit 
			else if input == 0 then 
				attack_result = exploit_menu(remote_shells, remote_comps, remote_files, remote_others)
				selected_menu = attack_result[0]
				selected_exploit = attack_result[1]
			end if 
		else if selected_menu == 3 then
		input = user_input(color.green+"File Exploit "+color.cap+"[ "+color.white+selected_exploit.F.name+color.cap+" ]\n1.) PW Attack \n2.) CHMOD \n3.) Cat Files\n4.) PWN\n5.) Browse FS [new]\n0.) Main Menu\n--> ") 
			input = input.val 
			if input == 1 then 
				selected_exploit.file_attack
			else if input == 2 then 
				u = user_input(color.green+"[User] *Enter For Guest* --> ")
				if u.len == 0 then u = "guest"
				s = user_input("[scope]--* Enter for +wrx *--> ")
				if s.len == 0 then s = "o+wrx" 
				selected_exploit.chmod_attack(u, s)
			else if input == 3 then 
				selected_exploit.cat_attack	
			else if input == 4 then
				confirm = user_input(color.red+"<b>=== Confirm PWN ===\n"+color.orange+"<b>!! YOU CANNOT UNDO THIS !! \n--> ")
				if confirm == "pwn" then selected_exploit.sys_pwn
			else if input == 5 then
				selected_exploit.fs
			else 
				attack_result = exploit_menu(remote_shells, remote_comps, remote_files, remote_others)
				selected_menu = attack_result[0]
				selected_exploit = attack_result[1]
			end if 
		else if selected_menu == 4 then
			input = user_input("Other Exploit:\n[ "+selected_exploit+" ] include:\n.) Password Changes\n.) Firewall Disable\n3.) Bounces\nReturn: ")
			attack_result = exploit_menu(shells, comps, files, others)
			selected_menu = attack_result[0]
			selected_exploit = attack_result[1]
		end if
	end while
	print(color.blue+color.fill); print(title+" Exiting Net Session as "+color.white+Utils.user(root)); print(color.blue+color.fill);
	if globals.debug then print(color.yellow+"debug: "+typeof(root)+" root type")
	return root
end function

//////////////////////////////////////////////////////////////  
///====================== UI =========== ================////
////////////////////////////////////////////////////////////
// exploitmenu.src 
// a multi-page menu desisgned to handle
// 1.) net session exploits
// 2.) local elevation 
// 3.) router penetration selected_menu = 0


// *******
//* Attack = function 
//* shells: list [ [shell_type, shell_object: Shell] ]
//* computers: list [ [ computer: Computer ] ]
//* files: list [ [ file: File ] ]
//* others: list [ [ file: String | Number ] ]
//* returns [exploit_type: Number, exploit_object: Map ]
exploit_menu = function(shells, comps, files, others)
	selected_option = 0
	selected_exploit = null
	selecting = true
	options = []
	if shells.len == 0 and comps.len == 0 and files.len == 0 and others.len == 0 then return print("Error, no exploits passed to the menu"); 
	print(color.blue+color.fill);print(init+color.green+" entering exploit menu . . .");print(color.blue+color.fill);
	while selecting == true	
		
		if selecting == false then break
		menu = [color.white+"~^~^~^~ Main ~^~^~^~"+color.cap, color.purple+"~^~^~^~ Shells ~^~^~^~"+color.cap, color.blue+"~^~^~^~ Computers ~^~^~^~"+color.cap, color.green+"~^~^~^~ Files ~^~^~^~"+color.cap, color.grey+"~^~^~^~ Other ~^~^~^~"+color.cap]
		if selected_menu == 0 then options = ["Shells: "+shells.len, "Computers: "+comps.len, "Files: "+files.len, "Other: "+others.len]
		// ASSIGNMENT
		if selected_menu == 1 then options = shells 
		if selected_menu == 2 then options = comps
		if selected_menu == 3 then options = files
		if selected_menu == 4 then options = others
		chosen_exploit = null
		in_main = null
		count = 1
		choices = menu[selected_menu]
		// FORMAT CHOICES
		for o in options
			info = ""
			if count == 3 and selected_menu == 3 then info = "NAME OWNER GROUP SCOPE PERMS"
			if selected_menu == 0 then
				info = info+o
				in_main = true
			else if selected_menu == 1 then		// shell exploit
				c = color.white
				u = Utils.user(o.shell)
				if @u == "root" then c = color.green
				if @u == "guest" then c = color.orange
				if @u == "unknown" then c = color.red
				info = "[ " +c+ u +color.cap+ " ] "
				in_main = false
			else if selected_menu == 2 then		// computer exploit
				c = color.white
				u = Utils.user(o.PC)
				if @u == "root" then c = color.green
				if @u == "guest" then c = color.orange
				if @u == "unknown" then c = color.red
				info = "[ " +c+ u +color.cap+ " ]<s>   </s>{" +color.white+o.ip+color.cap+":"+color.grey+o.lan+color.cap+"}"
				//info = "[_" + Utils.user_check(o) + "_]"
				in_main = false
			else if selected_menu == 3 then 		// file exploit
				lvl=""
				if o.F.has_permission("r") then lvl = lvl+"r"
				if o.F.has_permission("w") then lvl = lvl+"w"
				if o.F.has_permission("x") then lvl = lvl+"x"
				info = format_columns(o.F.name+" "+o.F.owner+" "+o.F.group+" "+lvl+" "+o.F.permissions)
				in_main = false
			else if selected_menu == 4 then
				info = o
				in_main = false
			end if
			if options.len == 0 then 
				info = "No exploits found"
				continue
			end if
			choices = choices+"\n"+count+".) "+info
			count = count+1
	end for
		if count == 1 then
			selected_menu = 0 
			continue
		end if
		
		print(choices)
		//print("0._Return to Main")
		choice_response = null
		if in_main == true or selected_menu == 0  then 
			menu_response = user_input(color.red+"<b>SELECT MENU</b>"+color.cap+color.grey+" * exit to Return *"+color.cap+color.white+" --> ")
			if menu_response == "exit" then 
				selecting = false
				return null
			end if
			selected_menu = menu_response.val
		end if
		if selected_menu == 0 and in_main == false then return
		if selected_menu > 0 and in_main == false then 
			choice_response	= user_input(color.orange+"<b>CHOOSE OPTION</b> "+color.cap+color.grey+"* 0 to return*"+color.cap+color.white+" --> ")
			if choice_response.val == 0 then 
				selected_menu = 0
				continue
			end if 
			if choice_response.val > options.len then continue
			if choice_response.val == 0 then selected_menu = 0

			attack_choice = user_input(color.yellow+"<b>CONFIRM</b> "+color.cap+color.white+"* Press 1 to use exploit"+color.cap+color.grey+" * Press any to return *"+color.cap+color.white+" --> ")
			attack_choice = attack_choice.val
			if attack_choice == 1 then
				chosen_exploit = options[choice_response.val-1] 
				selected_exploit = chosen_exploit
				selecting = false
				return [selected_menu, selected_exploit]
			end if
		end if
	end while
	print("exiting attack loop . . .")
end function



//print f(l)

// Starting from left, going right:
// 
// X Position
// Y Position
// Rotate
// Whole Word
// 
// X, will move it horizontally
// Y, will move it vertically
// Rotate, will rotate it
// Whole Word, will decide whether you want to rotate the whole string or just the letters
// 
// For personal preferences, I inverted the rotate value so negative values will go anti-clockwise instead
GFX = {}
GFX.f=function(l)
	x=10
	y=24
	out=""
	while l.len>0
		scale=1
		obj=l[0]
		text=obj.indexes[0]
		vals=obj[text]
		rot=-vals[2]
		torot=""
		toscale=""
		if scale!=1 then toscale="<size="+(scale*100)+"%>"
		torot="<rotate="+(rot)+">"
		tox="<pos="+((vals[0]*x)*scale)+">"
		toy="<voffset="+((-vals[1]*y)*scale)+">"
		if vals[3]==1 then
			num=0
			for let in text
				ang=(rot*(pi/180))
				posx=(cos(ang)*num)*10
				posy=(sin(ang)*num)*10
				out=out+toscale+torot+"<pos="+(((vals[0]*x)*scale)+posx)+"><voffset="+(((-vals[1]*y)*scale)+posy)+">"+let
				num=num+1
			end for
		else
			out=out+toscale+torot+tox+toy+text
		end if
		l.pull
	end while
	return out
end function

